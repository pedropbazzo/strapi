{"ast":null,"code":"var _jsxFileName = \"/home/devpedrobazzo/Downloads/strapi-examples/login-react/src/pages/Home.js\";\nimport React, { useState } from 'react';\nconst backendUrl = process.env.REACT_APP_BACKEND_URL;\nconst providersNames = ['github', 'facebook', 'google', 'twitter', 'discord', 'twitch', 'instagram', 'vk'];\n\nconst LoginButton = props => /*#__PURE__*/React.createElement(\"a\", {\n  href: `${backendUrl}/connect/${props.providerName}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 32\n  }\n}, /*#__PURE__*/React.createElement(\"button\", {\n  style: {\n    width: '150px'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }\n}, \"Connect to \", props.providerName));\n\nconst LogoutButton = props => /*#__PURE__*/React.createElement(\"button\", {\n  onClick: props.onClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 33\n  }\n}, \"Logout\");\n\nconst Home = props => {\n  const [isLogged, setIsLogged] = useState(!!localStorage.getItem('jwt'));\n\n  const logout = e => {\n    e.preventDefault();\n    localStorage.removeItem('jwt');\n    localStorage.removeItem('username');\n    setIsLogged(false);\n  };\n\n  let buttons;\n\n  if (isLogged) {\n    buttons = /*#__PURE__*/React.createElement(LogoutButton, {\n      onClick: logout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    });\n  } else {\n    buttons = /*#__PURE__*/React.createElement(\"ul\", {\n      style: {\n        listStyleType: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    }, providersNames.map((providerName, i) => /*#__PURE__*/React.createElement(\"li\", {\n      key: providerName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 48\n      }\n    }, /*#__PURE__*/React.createElement(LoginButton, {\n      providerName: providerName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }))));\n  }\n\n  let text;\n\n  if (isLogged) {\n    text = `Welcome ${localStorage.getItem('username')}, you are connected!`;\n  } else {\n    text = 'You are not connected. Please log in.';\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, text), buttons);\n};\n\nexport default Home;","map":{"version":3,"sources":["/home/devpedrobazzo/Downloads/strapi-examples/login-react/src/pages/Home.js"],"names":["React","useState","backendUrl","process","env","REACT_APP_BACKEND_URL","providersNames","LoginButton","props","providerName","width","LogoutButton","onClick","Home","isLogged","setIsLogged","localStorage","getItem","logout","e","preventDefault","removeItem","buttons","listStyleType","map","i","text"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,MAAMC,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,qBAA/B;AAEA,MAAMC,cAAc,GAAG,CACrB,QADqB,EAErB,UAFqB,EAGrB,QAHqB,EAIrB,SAJqB,EAKrB,SALqB,EAMrB,QANqB,EAOrB,WAPqB,EAQrB,IARqB,CAAvB;;AAWA,MAAMC,WAAW,GAAIC,KAAD,iBAAW;AAAG,EAAA,IAAI,EAAG,GAAEN,UAAW,YAAWM,KAAK,CAACC,YAAa,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAC3B;AAAQ,EAAA,KAAK,EAAE;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA+CF,KAAK,CAACC,YAArD,CAD2B,CAA/B;;AAIA,MAAME,YAAY,GAAIH,KAAD,iBAAW;AAAQ,EAAA,OAAO,EAAEA,KAAK,CAACI,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAhC;;AAEA,MAAMC,IAAI,GAAIL,KAAD,IAAW;AACtB,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,CAAC,CAACe,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAH,CAAxC;;AAEA,QAAMC,MAAM,GAAIC,CAAD,IAAO;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,YAAY,CAACK,UAAb,CAAwB,KAAxB;AACAL,IAAAA,YAAY,CAACK,UAAb,CAAwB,UAAxB;AACAN,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GALD;;AAOA,MAAIO,OAAJ;;AAEA,MAAIR,QAAJ,EAAc;AACZQ,IAAAA,OAAO,gBAAG,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAEJ,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AACD,GAFD,MAEO;AACLI,IAAAA,OAAO,gBAAG;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,aAAa,EAAE;AAAjB,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACPjB,cAAc,CAACkB,GAAf,CAAmB,CAACf,YAAD,EAAegB,CAAf,kBAAqB;AAAI,MAAA,GAAG,EAAEhB,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACvC,oBAAC,WAAD;AAAa,MAAA,YAAY,EAAEA,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADuC,CAAxC,CADO,CAAV;AAKD;;AAED,MAAIiB,IAAJ;;AAEA,MAAIZ,QAAJ,EAAc;AACZY,IAAAA,IAAI,GAAI,WAAUV,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAiC,sBAAnD;AACD,GAFD,MAEO;AACLS,IAAAA,IAAI,GAAG,uCAAP;AACD;;AAED,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,IAAJ,CADK,EAEJJ,OAFI,CAAP;AAID,CAlCD;;AAoCA,eAAeT,IAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst backendUrl = process.env.REACT_APP_BACKEND_URL;\n\nconst providersNames = [\n  'github',\n  'facebook',\n  'google',\n  'twitter',\n  'discord',\n  'twitch',\n  'instagram',\n  'vk',\n];\n\nconst LoginButton = (props) => <a href={`${backendUrl}/connect/${props.providerName}`}>\n    <button style={{ width: '150px' }}>Connect to {props.providerName}</button>\n  </a>;\n\nconst LogoutButton = (props) => <button onClick={props.onClick}>Logout</button>;\n\nconst Home = (props) => {\n  const [isLogged, setIsLogged] = useState(!!localStorage.getItem('jwt'));\n\n  const logout = (e) => {\n    e.preventDefault();\n    localStorage.removeItem('jwt');\n    localStorage.removeItem('username');\n    setIsLogged(false);\n  };\n\n  let buttons;\n\n  if (isLogged) {\n    buttons = <LogoutButton onClick={logout} />;\n  } else {\n    buttons = <ul style={{ listStyleType: 'none' }}>\n      {providersNames.map((providerName, i) => <li key={providerName}>\n        <LoginButton providerName={providerName}/>\n        </li>)}\n    </ul>;\n  }\n\n  let text;\n\n  if (isLogged) {\n    text = `Welcome ${localStorage.getItem('username')}, you are connected!`;\n  } else {\n    text = 'You are not connected. Please log in.';\n  }\n\n  return <div>\n    <p>{text}</p>\n    {buttons}\n  </div>;\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}